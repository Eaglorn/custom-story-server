// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// TODO Создать модель заявок на регистрацию пользователей

model User {
  id       Int      @id @default(autoincrement())
  email    String?  @unique
  password String?
  type     UserType @default(user)
  hero     Hero?
}

enum UserType {
  admin
  moderator
  vip
  user
}

model Hero {
  id              Int             @id @default(autoincrement())
  user            User?           @relation(fields: [user_id], references: [id])
  user_id         Int?            @unique
  money           Decimal         @default(0.0) @db.Decimal(15, 3)
  hp              Decimal         @default(0.0) @db.Decimal(9, 3)
  mp              Decimal         @default(0.0) @db.Decimal(9, 3)
  str             Decimal         @default(10.0) @db.Decimal(7, 3)
  agi             Decimal         @default(10.0) @db.Decimal(7, 3)
  vit             Decimal         @default(10.0) @db.Decimal(7, 3)
  sta             Decimal         @default(10.0) @db.Decimal(7, 3)
  int             Decimal         @default(10.0) @db.Decimal(7, 3)
  wis             Decimal         @default(10.0) @db.Decimal(7, 3)
  equipment       EquipmentItem[]
  container_slots Int?            @default(10) @db.SmallInt
  container       ContainerItem[]
}

model EquipmentItem {
  id      BigInt            @id @default(autoincrement())
  hero    Hero              @relation(fields: [hero_id], references: [id])
  hero_id Int               @unique
  slot    EquipmentItemSlot
}

enum EquipmentItemSlot {
  head
  shoulders
  body
  bracers
  gloves
  belt
  legs
  boots
  left_hand
  right_hand
  both_hand
}

model ContainerItem {
  id      BigInt @id @default(autoincrement())
  hero    Hero   @relation(fields: [hero_id], references: [id])
  hero_id Int    @unique
}
